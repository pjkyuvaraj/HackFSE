//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ORS_Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ReportingSystemDBEntities : DbContext
    {
        public ReportingSystemDBEntities()
            : base("name=ReportingSystemDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Email> Emails { get; set; }
        public virtual DbSet<Employee_Details> Employee_Details { get; set; }
        public virtual DbSet<Event_Details> Event_Details { get; set; }
        public virtual DbSet<POC_Info> POC_Info { get; set; }
        public virtual DbSet<MasterBeneficiary> MasterBeneficiaries { get; set; }
        public virtual DbSet<MasterCountry> MasterCountries { get; set; }
        public virtual DbSet<MasterEvent> MasterEvents { get; set; }
        public virtual DbSet<POC_Credential> POC_Credential { get; set; }
        public virtual DbSet<User_details> User_details { get; set; }
        public virtual DbSet<BaseLocations> BaseLocations { get; set; }
        public virtual DbSet<BusinessUnits> BusinessUnits { get; set; }
        public virtual DbSet<EventSummary> EventSummary { get; set; }
        public virtual DbSet<OutReachEventInformation> OutReachEventInformation { get; set; }
        public virtual DbSet<AssociateDetails> AssociateDetails { get; set; }
        public virtual DbSet<LoginDetails> LoginDetails { get; set; }
        public virtual DbSet<EventVolunteerDetails> EventVolunteerDetails { get; set; }
    
        public virtual ObjectResult<EventDetailsSummary> spGetEventDetails(string eventId)
        {
            var eventIdParameter = eventId != null ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EventDetailsSummary>("spGetEventDetails", eventIdParameter);
        }
    
        public virtual int spInsertEventDetails(string eventDetailsInfoXml)
        {
            var eventDetailsInfoXmlParameter = eventDetailsInfoXml != null ?
                new ObjectParameter("EventDetailsInfoXml", eventDetailsInfoXml) :
                new ObjectParameter("EventDetailsInfoXml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertEventDetails", eventDetailsInfoXmlParameter);
        }
    
        public virtual int spDeleteEventDetails(string eventId)
        {
            var eventIdParameter = eventId != null ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteEventDetails", eventIdParameter);
        }
    
        public virtual ObjectResult<EngagementMetricReport> spEngagementMetrics(Nullable<int> interval)
        {
            var intervalParameter = interval.HasValue ?
                new ObjectParameter("Interval", interval) :
                new ObjectParameter("Interval", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EngagementMetricReport>("spEngagementMetrics", intervalParameter);
        }
    
        public virtual ObjectResult<GenericMetricsReport> spGetGenericMetrics(Nullable<int> interval, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var intervalParameter = interval.HasValue ?
                new ObjectParameter("Interval", interval) :
                new ObjectParameter("Interval", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GenericMetricsReport>("spGetGenericMetrics", intervalParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ParticipantMetrics> spGetParticipantMetrics(string bUnit, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var bUnitParameter = bUnit != null ?
                new ObjectParameter("BUnit", bUnit) :
                new ObjectParameter("BUnit", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ParticipantMetrics>("spGetParticipantMetrics", bUnitParameter, startDateParameter, endDateParameter);
        }
    }
}
